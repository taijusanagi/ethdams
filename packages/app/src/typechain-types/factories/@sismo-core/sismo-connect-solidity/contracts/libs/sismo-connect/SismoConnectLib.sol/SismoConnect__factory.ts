/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  SismoConnect,
  SismoConnectInterface,
} from "../../../../../../../@sismo-core/sismo-connect-solidity/contracts/libs/sismo-connect/SismoConnectLib.sol/SismoConnect";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "appIdentifier",
        type: "bytes16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SISMO_CONNECT_LIB_VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appId",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "buildSignature",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "buildSignature",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "buildSignature",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "buildSignature",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001456380380620014568339818101604052810190620000379190620005f1565b80600560006101000a8154816fffffffffffffffffffffffffffffffff021916908360801c0217905550733340ac0cafb3ae34ddd53dba0d7344c1cf3efe0573ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601781526020017f7369736d6f436f6e6e65637456657269666965722d76310000000000000000008152506040518263ffffffff1660e01b8152600401620000e59190620006bd565b602060405180830381865afa15801562000103573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000129919062000746565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733340ac0cafb3ae34ddd53dba0d7344c1cf3efe0573ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601581526020017f61757468526571756573744275696c6465722d763100000000000000000000008152506040518263ffffffff1660e01b8152600401620001ec9190620006bd565b602060405180830381865afa1580156200020a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000230919062000746565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733340ac0cafb3ae34ddd53dba0d7344c1cf3efe0573ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601681526020017f636c61696d526571756573744275696c6465722d7631000000000000000000008152506040518263ffffffff1660e01b8152600401620002f49190620006bd565b602060405180830381865afa15801562000312573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000338919062000746565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733340ac0cafb3ae34ddd53dba0d7344c1cf3efe0573ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601381526020017f7369676e61747572654275696c6465722d7631000000000000000000000000008152506040518263ffffffff1660e01b8152600401620003fc9190620006bd565b602060405180830381865afa1580156200041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000440919062000746565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733340ac0cafb3ae34ddd53dba0d7344c1cf3efe0573ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601181526020017f726571756573744275696c6465722d76310000000000000000000000000000008152506040518263ffffffff1660e01b8152600401620005049190620006bd565b602060405180830381865afa15801562000522573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000548919062000746565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000778565b600080fd5b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b620005cb8162000594565b8114620005d757600080fd5b50565b600081519050620005eb81620005c0565b92915050565b6000602082840312156200060a57620006096200058f565b5b60006200061a84828501620005da565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200065f57808201518184015260208101905062000642565b60008484015250505050565b6000601f19601f8301169050919050565b6000620006898262000623565b6200069581856200062e565b9350620006a78185602086016200063f565b620006b2816200066b565b840191505092915050565b60006020820190508181036000830152620006d981846200067c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200070e82620006e1565b9050919050565b620007208162000701565b81146200072c57600080fd5b50565b600081519050620007408162000715565b92915050565b6000602082840312156200075f576200075e6200058f565b5b60006200076f848285016200072f565b91505092915050565b610cce80620007886000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806380afdea81161005b57806380afdea814610100578063c9512d991461011e578063cea8eb4e1461013c578063e06897031461016c5761007d565b80630542975c1461008257806349161195146100a05780636e01370e146100d0575b600080fd5b61008a61019c565b604051610097919061053a565b60405180910390f35b6100ba60048036038101906100b591906105a1565b6101b4565b6040516100c791906106c4565b60405180910390f35b6100ea60048036038101906100e5919061081b565b610264565b6040516100f791906106c4565b60405180910390f35b610108610317565b60405161011591906108ce565b60405180910390f35b61012661032a565b6040516101339190610902565b60405180910390f35b6101566004803603810190610151919061091d565b61032f565b60405161016391906106c4565b60405180910390f35b61018660048036038101906101819190610979565b6103e2565b60405161019391906106c4565b60405180910390f35b733340ac0cafb3ae34ddd53dba0d7344c1cf3efe0581565b6101bc610498565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ed8572e836040518263ffffffff1660e01b81526004016102179190610a13565b600060405180830381865afa158015610234573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061025d9190610b59565b9050919050565b61026c610498565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635de3b44c84846040518363ffffffff1660e01b81526004016102c9929190610bec565b600060405180830381865afa1580156102e6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061030f9190610b59565b905092915050565b600560009054906101000a900460801b81565b600281565b610337610498565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637476d1ac84846040518363ffffffff1660e01b8152600401610394929190610c23565b600060405180830381865afa1580156103b1573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103da9190610b59565b905092915050565b6103ea610498565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631f785c958585856040518463ffffffff1660e01b815260040161044993929190610c53565b600060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061048f9190610b59565b90509392505050565b604051806060016040528060608152602001600015158152602001606081525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105006104fb6104f6846104bb565b6104db565b6104bb565b9050919050565b6000610512826104e5565b9050919050565b600061052482610507565b9050919050565b61053481610519565b82525050565b600060208201905061054f600083018461052b565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b61057e81610569565b811461058957600080fd5b50565b60008135905061059b81610575565b92915050565b6000602082840312156105b7576105b661055f565b5b60006105c58482850161058c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106085780820151818401526020810190506105ed565b60008484015250505050565b6000601f19601f8301169050919050565b6000610630826105ce565b61063a81856105d9565b935061064a8185602086016105ea565b61065381610614565b840191505092915050565b61066781610569565b82525050565b6000606083016000830151848203600086015261068a8282610625565b915050602083015161069f602086018261065e565b50604083015184820360408601526106b78282610625565b9150508091505092915050565b600060208201905081810360008301526106de818461066d565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61072882610614565b810181811067ffffffffffffffff82111715610747576107466106f0565b5b80604052505050565b600061075a610555565b9050610766828261071f565b919050565b600067ffffffffffffffff821115610786576107856106f0565b5b61078f82610614565b9050602081019050919050565b82818337600083830152505050565b60006107be6107b98461076b565b610750565b9050828152602081018484840111156107da576107d96106eb565b5b6107e584828561079c565b509392505050565b600082601f830112610802576108016106e6565b5b81356108128482602086016107ab565b91505092915050565b600080604083850312156108325761083161055f565b5b600083013567ffffffffffffffff8111156108505761084f610564565b5b61085c858286016107ed565b925050602083013567ffffffffffffffff81111561087d5761087c610564565b5b610889858286016107ed565b9150509250929050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6108c881610893565b82525050565b60006020820190506108e360008301846108bf565b92915050565b6000819050919050565b6108fc816108e9565b82525050565b600060208201905061091760008301846108f3565b92915050565b600080604083850312156109345761093361055f565b5b60006109428582860161058c565b925050602083013567ffffffffffffffff81111561096357610962610564565b5b61096f858286016107ed565b9150509250929050565b6000806000606084860312156109925761099161055f565b5b600084013567ffffffffffffffff8111156109b0576109af610564565b5b6109bc868287016107ed565b93505060206109cd8682870161058c565b925050604084013567ffffffffffffffff8111156109ee576109ed610564565b5b6109fa868287016107ed565b9150509250925092565b610a0d81610569565b82525050565b6000602082019050610a286000830184610a04565b92915050565b600080fd5b600080fd5b6000610a4b610a468461076b565b610750565b905082815260208101848484011115610a6757610a666106eb565b5b610a728482856105ea565b509392505050565b600082601f830112610a8f57610a8e6106e6565b5b8151610a9f848260208601610a38565b91505092915050565b600081519050610ab781610575565b92915050565b600060608284031215610ad357610ad2610a2e565b5b610add6060610750565b9050600082015167ffffffffffffffff811115610afd57610afc610a33565b5b610b0984828501610a7a565b6000830152506020610b1d84828501610aa8565b602083015250604082015167ffffffffffffffff811115610b4157610b40610a33565b5b610b4d84828501610a7a565b60408301525092915050565b600060208284031215610b6f57610b6e61055f565b5b600082015167ffffffffffffffff811115610b8d57610b8c610564565b5b610b9984828501610abd565b91505092915050565b600082825260208201905092915050565b6000610bbe826105ce565b610bc88185610ba2565b9350610bd88185602086016105ea565b610be181610614565b840191505092915050565b60006040820190508181036000830152610c068185610bb3565b90508181036020830152610c1a8184610bb3565b90509392505050565b6000604082019050610c386000830185610a04565b8181036020830152610c4a8184610bb3565b90509392505050565b60006060820190508181036000830152610c6d8186610bb3565b9050610c7c6020830185610a04565b8181036040830152610c8e8184610bb3565b905094935050505056fea2646970667358221220e1b96b687b94372821feed45244b089f603c78af1c1e62ccf0c940119f334c1764736f6c63430008130033";

type SismoConnectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SismoConnectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SismoConnect__factory extends ContractFactory {
  constructor(...args: SismoConnectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    appIdentifier: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SismoConnect> {
    return super.deploy(
      appIdentifier,
      overrides || {}
    ) as Promise<SismoConnect>;
  }
  override getDeployTransaction(
    appIdentifier: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(appIdentifier, overrides || {});
  }
  override attach(address: string): SismoConnect {
    return super.attach(address) as SismoConnect;
  }
  override connect(signer: Signer): SismoConnect__factory {
    return super.connect(signer) as SismoConnect__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SismoConnectInterface {
    return new utils.Interface(_abi) as SismoConnectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SismoConnect {
    return new Contract(address, _abi, signerOrProvider) as SismoConnect;
  }
}
