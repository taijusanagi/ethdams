/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAddressesProvider,
  IAddressesProviderInterface,
} from "../../../../../../@sismo-core/sismo-connect-solidity/contracts/periphery/interfaces/IAddressesProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "contractName",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractNameHash",
        type: "bytes32",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAll",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "contractNamesHash",
        type: "bytes32[]",
      },
    ],
    name: "getBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "contractNames",
        type: "string[]",
      },
    ],
    name: "getBatch",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "contractName",
        type: "string",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "contractAddresses",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "contractNames",
        type: "string[]",
      },
    ],
    name: "setBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAddressesProvider__factory {
  static readonly abi = _abi;
  static createInterface(): IAddressesProviderInterface {
    return new utils.Interface(_abi) as IAddressesProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAddressesProvider {
    return new Contract(address, _abi, signerOrProvider) as IAddressesProvider;
  }
}
