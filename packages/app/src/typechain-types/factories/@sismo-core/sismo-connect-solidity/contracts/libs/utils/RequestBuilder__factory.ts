/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RequestBuilder,
  RequestBuilderInterface,
} from "../../../../../../@sismo-core/sismo-connect-solidity/contracts/libs/utils/RequestBuilder";

const _abi = [
  {
    inputs: [],
    name: "DEFAULT_NAMESPACE",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest[]",
        name: "auths",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum AuthType",
            name: "authType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "userId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAnon",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AuthRequest",
        name: "auth",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claim",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct SignatureRequest",
        name: "signature",
        type: "tuple",
      },
      {
        internalType: "bytes16",
        name: "appId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "appId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "namespace",
            type: "bytes16",
          },
          {
            components: [
              {
                internalType: "enum AuthType",
                name: "authType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "userId",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isAnon",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct AuthRequest[]",
            name: "auths",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ClaimType",
                name: "claimType",
                type: "uint8",
              },
              {
                internalType: "bytes16",
                name: "groupId",
                type: "bytes16",
              },
              {
                internalType: "bytes16",
                name: "groupTimestamp",
                type: "bytes16",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isOptional",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ClaimRequest[]",
            name: "claims",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "message",
                type: "bytes",
              },
              {
                internalType: "bool",
                name: "isSelectableByUser",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct SignatureRequest",
            name: "signature",
            type: "tuple",
          },
        ],
        internalType: "struct SismoConnectRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260405180606001604052806040518060400160405280601881526020017f4d4553534147455f53454c45435445445f42595f5553455200000000000000008152508152602001600015158152602001604051806020016040528060008152508152506000808201518160000190816200007e919062000347565b5060208201518160010160006101000a81548160ff0219169083151502179055506040820151816002019081620000b6919062000347565b505050348015620000c657600080fd5b506200042e565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014f57607f821691505b60208210810362000165576200016462000107565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000190565b620001db868362000190565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000228620002226200021c84620001f3565b620001fd565b620001f3565b9050919050565b6000819050919050565b620002448362000207565b6200025c62000253826200022f565b8484546200019d565b825550505050565b600090565b6200027362000264565b6200028081848462000239565b505050565b5b81811015620002a8576200029c60008262000269565b60018101905062000286565b5050565b601f821115620002f757620002c1816200016b565b620002cc8462000180565b81016020851015620002dc578190505b620002f4620002eb8562000180565b83018262000285565b50505b505050565b600082821c905092915050565b60006200031c60001984600802620002fc565b1980831691505092915050565b600062000337838362000309565b9150826002028217905092915050565b6200035282620000cd565b67ffffffffffffffff8111156200036e576200036d620000d8565b5b6200037a825462000136565b62000387828285620002ac565b600060209050601f831160018114620003bf5760008415620003aa578287015190505b620003b6858262000329565b86555062000426565b601f198416620003cf866200016b565b60005b82811015620003f957848901518255600182019150602085019450602081019050620003d2565b8683101562000419578489015162000415601f89168262000309565b8355505b6001600288020188555050505b505050505050565b61482a806200043e6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80639266f47c116100de578063dcbfa3e111610097578063e48cd72111610071578063e48cd72114610556578063e93f38b814610586578063f1c1e209146105b6578063f8e24f8c146105e657610173565b8063dcbfa3e1146104c6578063dd108267146104f6578063deda2c291461052657610173565b80639266f47c146103a65780639b91f81b146103d6578063abd812a214610406578063bfe62cfc14610436578063c84fe5dd14610466578063daf7b90d1461049657610173565b80632fbbb9ec116101305780632fbbb9ec1461028657806331560e75146102b657806354852577146102e657806364cb259f146103165780637958fc3f1461034657806391ba07f31461037657610173565b8063080b53f81461017857806310c5d31b146101a857806314ddafa3146101d85780631b399c991461020857806327b5b7c3146102265780632ee6a67c14610256575b600080fd5b610192600480360381019061018d91906131aa565b610616565b60405161019f91906136f5565b60405180910390f35b6101c260048036038101906101bd9190613894565b6108b1565b6040516101cf91906136f5565b60405180910390f35b6101f260048036038101906101ed9190613a05565b610a02565b6040516101ff91906136f5565b60405180910390f35b610210610ad9565b60405161021d9190613a9f565b60405180910390f35b610240600480360381019061023b9190613b9b565b610afd565b60405161024d91906136f5565b60405180910390f35b610270600480360381019061026b9190613bf7565b610d1e565b60405161027d91906136f5565b60405180910390f35b6102a0600480360381019061029b9190613c96565b610ec8565b6040516102ad91906136f5565b60405180910390f35b6102d060048036038101906102cb9190613d35565b610ffa565b6040516102dd91906136f5565b60405180910390f35b61030060048036038101906102fb9190613dc0565b6112b7565b60405161030d91906136f5565b60405180910390f35b610330600480360381019061032b9190613e4b565b611408565b60405161033d91906136f5565b60405180910390f35b610360600480360381019061035b9190613eea565b6114c0565b60405161036d91906136f5565b60405180910390f35b610390600480360381019061038b9190613f59565b61173c565b60405161039d91906136f5565b60405180910390f35b6103c060048036038101906103bb9190613fb5565b6119d7565b6040516103cd91906136f5565b60405180910390f35b6103f060048036038101906103eb9190614040565b611ba0565b6040516103fd91906136f5565b60405180910390f35b610420600480360381019061041b91906140af565b611da2565b60405161042d91906136f5565b60405180910390f35b610450600480360381019061044b919061414e565b611e5a565b60405161045d91906136f5565b60405180910390f35b610480600480360381019061047b91906141bd565b61205c565b60405161048d91906136f5565b60405180910390f35b6104b060048036038101906104ab919061425c565b61218e565b6040516104bd91906136f5565b60405180910390f35b6104e060048036038101906104db91906142fb565b61242c565b6040516104ed91906136f5565b60405180910390f35b610510600480360381019061050b919061436a565b6126a8565b60405161051d91906136f5565b60405180910390f35b610540600480360381019061053b91906143f5565b61277f565b60405161054d91906136f5565b60405180910390f35b610570600480360381019061056b91906144c4565b6127df565b60405161057d91906136f5565b60405180910390f35b6105a0600480360381019061059b919061457f565b61285e565b6040516105ad91906136f5565b60405180910390f35b6105d060048036038101906105cb919061463a565b6129d1565b6040516105dd91906136f5565b60405180910390f35b61060060048036038101906105fb9190614696565b612bf2565b60405161060d91906136f5565b60405180910390f35b61061e612d46565b60008067ffffffffffffffff81111561063a57610639612eb5565b5b60405190808252806020026020018201604052801561067357816020015b610660612da1565b8152602001906001900390816106585790505b5090506000600167ffffffffffffffff81111561069357610692612eb5565b5b6040519080825280602002602001820160405280156106cc57816020015b6106b9612def565b8152602001906001900390816106b15790505b50905084816000815181106106e4576106e3614765565b5b60200260200101819052506040518060a00160405280856fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff191681526020018381526020018281526020016000604051806060016040529081600082018054610775906147c3565b80601f01602080910402602001604051908101604052809291908181526020018280546107a1906147c3565b80156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054610822906147c3565b80601f016020809104026020016040519081016040528092919081815260200182805461084e906147c3565b801561089b5780601f106108705761010080835404028352916020019161089b565b820191906000526020600020905b81548152906001019060200180831161087e57829003601f168201915b5050505050815250508152509250505092915050565b6108b9612d46565b6000600167ffffffffffffffff8111156108d6576108d5612eb5565b5b60405190808252806020026020018201604052801561090f57816020015b6108fc612da1565b8152602001906001900390816108f45790505b509050848160008151811061092757610926614765565b5b602002602001018190525060008067ffffffffffffffff81111561094e5761094d612eb5565b5b60405190808252806020026020018201604052801561098757816020015b610974612def565b81526020019060019003908161096c5790505b5090506040518060a00160405280856fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff1916815260200183815260200182815260200186815250925050509392505050565b610a0a612d46565b60008067ffffffffffffffff811115610a2657610a25612eb5565b5b604051908082528060200260200182016040528015610a5f57816020015b610a4c612da1565b815260200190600190039081610a445790505b5090506040518060a00160405280846fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff19168152602001828152602001868152602001858152509150509392505050565b7fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a781565b610b05612d46565b60008067ffffffffffffffff811115610b2157610b20612eb5565b5b604051908082528060200260200182016040528015610b5a57816020015b610b47612def565b815260200190600190039081610b3f5790505b5090506040518060a00160405280846fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff191681526020018581526020018281526020016000604051806060016040529081600082018054610be3906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0f906147c3565b8015610c5c5780601f10610c3157610100808354040283529160200191610c5c565b820191906000526020600020905b815481529060010190602001808311610c3f57829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054610c90906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610cbc906147c3565b8015610d095780601f10610cde57610100808354040283529160200191610d09565b820191906000526020600020905b815481529060010190602001808311610cec57829003601f168201915b50505050508152505081525091505092915050565b610d26612d46565b6040518060a00160405280846fffffffffffffffffffffffffffffffff19168152602001836fffffffffffffffffffffffffffffffff191681526020018681526020018581526020016000604051806060016040529081600082018054610d8c906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610db8906147c3565b8015610e055780601f10610dda57610100808354040283529160200191610e05565b820191906000526020600020905b815481529060010190602001808311610de857829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054610e39906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610e65906147c3565b8015610eb25780601f10610e8757610100808354040283529160200191610eb2565b820191906000526020600020905b815481529060010190602001808311610e9557829003601f168201915b5050505050815250508152509050949350505050565b610ed0612d46565b6000600167ffffffffffffffff811115610eed57610eec612eb5565b5b604051908082528060200260200182016040528015610f2657816020015b610f13612da1565b815260200190600190039081610f0b5790505b5090508581600081518110610f3e57610f3d614765565b5b602002602001018190525060008067ffffffffffffffff811115610f6557610f64612eb5565b5b604051908082528060200260200182016040528015610f9e57816020015b610f8b612def565b815260200190600190039081610f835790505b5090506040518060a00160405280866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff191681526020018381526020018281526020018781525092505050949350505050565b611002612d46565b6000600167ffffffffffffffff81111561101f5761101e612eb5565b5b60405190808252806020026020018201604052801561105857816020015b611045612da1565b81526020019060019003908161103d5790505b50905084816000815181106110705761106f614765565b5b60200260200101819052506000600167ffffffffffffffff81111561109857611097612eb5565b5b6040519080825280602002602001820160405280156110d157816020015b6110be612def565b8152602001906001900390816110b65790505b50905084816000815181106110e9576110e8614765565b5b60200260200101819052506040518060a00160405280856fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff19168152602001838152602001828152602001600060405180606001604052908160008201805461117a906147c3565b80601f01602080910402602001604051908101604052809291908181526020018280546111a6906147c3565b80156111f35780601f106111c8576101008083540402835291602001916111f3565b820191906000526020600020905b8154815290600101906020018083116111d657829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054611227906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611253906147c3565b80156112a05780601f10611275576101008083540402835291602001916112a0565b820191906000526020600020905b81548152906001019060200180831161128357829003601f168201915b505050505081525050815250925050509392505050565b6112bf612d46565b60008067ffffffffffffffff8111156112db576112da612eb5565b5b60405190808252806020026020018201604052801561131457816020015b611301612da1565b8152602001906001900390816112f95790505b5090506000600167ffffffffffffffff81111561133457611333612eb5565b5b60405190808252806020026020018201604052801561136d57816020015b61135a612def565b8152602001906001900390816113525790505b509050858160008151811061138557611384614765565b5b60200260200101819052506040518060a00160405280856fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff1916815260200183815260200182815260200186815250925050509392505050565b611410612d46565b60008067ffffffffffffffff81111561142c5761142b612eb5565b5b60405190808252806020026020018201604052801561146557816020015b611452612da1565b81526020019060019003908161144a5790505b5090506040518060a00160405280856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff1916815260200182815260200187815260200186815250915050949350505050565b6114c8612d46565b60008067ffffffffffffffff8111156114e4576114e3612eb5565b5b60405190808252806020026020018201604052801561151d57816020015b61150a612da1565b8152602001906001900390816115025790505b5090506000600167ffffffffffffffff81111561153d5761153c612eb5565b5b60405190808252806020026020018201604052801561157657816020015b611563612def565b81526020019060019003908161155b5790505b509050858160008151811061158e5761158d614765565b5b60200260200101819052506040518060a00160405280866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff1916815260200183815260200182815260200160006040518060600160405290816000820180546115ff906147c3565b80601f016020809104026020016040519081016040528092919081815260200182805461162b906147c3565b80156116785780601f1061164d57610100808354040283529160200191611678565b820191906000526020600020905b81548152906001019060200180831161165b57829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016002820180546116ac906147c3565b80601f01602080910402602001604051908101604052809291908181526020018280546116d8906147c3565b80156117255780601f106116fa57610100808354040283529160200191611725565b820191906000526020600020905b81548152906001019060200180831161170857829003601f168201915b505050505081525050815250925050509392505050565b611744612d46565b6000600167ffffffffffffffff81111561176157611760612eb5565b5b60405190808252806020026020018201604052801561179a57816020015b611787612da1565b81526020019060019003908161177f5790505b50905083816000815181106117b2576117b1614765565b5b602002602001018190525060008067ffffffffffffffff8111156117d9576117d8612eb5565b5b60405190808252806020026020018201604052801561181257816020015b6117ff612def565b8152602001906001900390816117f75790505b5090506040518060a00160405280856fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff19168152602001838152602001828152602001600060405180606001604052908160008201805461189b906147c3565b80601f01602080910402602001604051908101604052809291908181526020018280546118c7906147c3565b80156119145780601f106118e957610100808354040283529160200191611914565b820191906000526020600020905b8154815290600101906020018083116118f757829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054611948906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611974906147c3565b80156119c15780601f10611996576101008083540402835291602001916119c1565b820191906000526020600020905b8154815290600101906020018083116119a457829003601f168201915b5050505050815250508152509250505092915050565b6119df612d46565b6040518060a00160405280836fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff191681526020018581526020018481526020016000604051806060016040529081600082018054611a65906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611a91906147c3565b8015611ade5780601f10611ab357610100808354040283529160200191611ade565b820191906000526020600020905b815481529060010190602001808311611ac157829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054611b12906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3e906147c3565b8015611b8b5780601f10611b6057610100808354040283529160200191611b8b565b820191906000526020600020905b815481529060010190602001808311611b6e57829003601f168201915b50505050508152505081525090509392505050565b611ba8612d46565b60008067ffffffffffffffff811115611bc457611bc3612eb5565b5b604051908082528060200260200182016040528015611bfd57816020015b611bea612def565b815260200190600190039081611be25790505b5090506040518060a00160405280856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff191681526020018681526020018281526020016000604051806060016040529081600082018054611c66906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611c92906147c3565b8015611cdf5780601f10611cb457610100808354040283529160200191611cdf565b820191906000526020600020905b815481529060010190602001808311611cc257829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054611d13906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611d3f906147c3565b8015611d8c5780601f10611d6157610100808354040283529160200191611d8c565b820191906000526020600020905b815481529060010190602001808311611d6f57829003601f168201915b5050505050815250508152509150509392505050565b611daa612d46565b60008067ffffffffffffffff811115611dc657611dc5612eb5565b5b604051908082528060200260200182016040528015611dff57816020015b611dec612def565b815260200190600190039081611de45790505b5090506040518060a00160405280856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff1916815260200187815260200182815260200186815250915050949350505050565b611e62612d46565b60008067ffffffffffffffff811115611e7e57611e7d612eb5565b5b604051908082528060200260200182016040528015611eb757816020015b611ea4612da1565b815260200190600190039081611e9c5790505b5090506040518060a00160405280856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff191681526020018281526020018681526020016000604051806060016040529081600082018054611f20906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611f4c906147c3565b8015611f995780601f10611f6e57610100808354040283529160200191611f99565b820191906000526020600020905b815481529060010190602001808311611f7c57829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054611fcd906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff9906147c3565b80156120465780601f1061201b57610100808354040283529160200191612046565b820191906000526020600020905b81548152906001019060200180831161202957829003601f168201915b5050505050815250508152509150509392505050565b612064612d46565b60008067ffffffffffffffff8111156120805761207f612eb5565b5b6040519080825280602002602001820160405280156120b957816020015b6120a6612da1565b81526020019060019003908161209e5790505b5090506000600167ffffffffffffffff8111156120d9576120d8612eb5565b5b60405190808252806020026020018201604052801561211257816020015b6120ff612def565b8152602001906001900390816120f75790505b509050868160008151811061212a57612129614765565b5b60200260200101819052506040518060a00160405280866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff191681526020018381526020018281526020018781525092505050949350505050565b612196612d46565b6000600167ffffffffffffffff8111156121b3576121b2612eb5565b5b6040519080825280602002602001820160405280156121ec57816020015b6121d9612da1565b8152602001906001900390816121d15790505b509050858160008151811061220457612203614765565b5b60200260200101819052506000600167ffffffffffffffff81111561222c5761222b612eb5565b5b60405190808252806020026020018201604052801561226557816020015b612252612def565b81526020019060019003908161224a5790505b509050858160008151811061227d5761227c614765565b5b60200260200101819052506040518060a00160405280866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff1916815260200183815260200182815260200160006040518060600160405290816000820180546122ee906147c3565b80601f016020809104026020016040519081016040528092919081815260200182805461231a906147c3565b80156123675780601f1061233c57610100808354040283529160200191612367565b820191906000526020600020905b81548152906001019060200180831161234a57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1615151515815260200160028201805461239b906147c3565b80601f01602080910402602001604051908101604052809291908181526020018280546123c7906147c3565b80156124145780601f106123e957610100808354040283529160200191612414565b820191906000526020600020905b8154815290600101906020018083116123f757829003601f168201915b50505050508152505081525092505050949350505050565b612434612d46565b6000600167ffffffffffffffff81111561245157612450612eb5565b5b60405190808252806020026020018201604052801561248a57816020015b612477612da1565b81526020019060019003908161246f5790505b50905084816000815181106124a2576124a1614765565b5b602002602001018190525060008067ffffffffffffffff8111156124c9576124c8612eb5565b5b60405190808252806020026020018201604052801561250257816020015b6124ef612def565b8152602001906001900390816124e75790505b5090506040518060a00160405280866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff19168152602001838152602001828152602001600060405180606001604052908160008201805461256b906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612597906147c3565b80156125e45780601f106125b9576101008083540402835291602001916125e4565b820191906000526020600020905b8154815290600101906020018083116125c757829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054612618906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612644906147c3565b80156126915780601f1061266657610100808354040283529160200191612691565b820191906000526020600020905b81548152906001019060200180831161267457829003601f168201915b505050505081525050815250925050509392505050565b6126b0612d46565b60008067ffffffffffffffff8111156126cc576126cb612eb5565b5b60405190808252806020026020018201604052801561270557816020015b6126f2612def565b8152602001906001900390816126ea5790505b5090506040518060a00160405280846fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff19168152602001868152602001828152602001858152509150509392505050565b612787612d46565b6040518060a00160405280846fffffffffffffffffffffffffffffffff19168152602001836fffffffffffffffffffffffffffffffff1916815260200187815260200186815260200185815250905095945050505050565b6127e7612d46565b6040518060a00160405280836fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff19168152602001868152602001858152602001848152509050949350505050565b612866612d46565b6000600167ffffffffffffffff81111561288357612882612eb5565b5b6040519080825280602002602001820160405280156128bc57816020015b6128a9612da1565b8152602001906001900390816128a15790505b50905085816000815181106128d4576128d3614765565b5b60200260200101819052506000600167ffffffffffffffff8111156128fc576128fb612eb5565b5b60405190808252806020026020018201604052801561293557816020015b612922612def565b81526020019060019003908161291a5790505b509050858160008151811061294d5761294c614765565b5b60200260200101819052506040518060a00160405280856fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff191681526020018381526020018281526020018681525092505050949350505050565b6129d9612d46565b60008067ffffffffffffffff8111156129f5576129f4612eb5565b5b604051908082528060200260200182016040528015612a2e57816020015b612a1b612da1565b815260200190600190039081612a135790505b5090506040518060a00160405280846fffffffffffffffffffffffffffffffff191681526020017fb8e2054f8a912367e38a22ce773328ff8aabf8082c4120bad9ef085e1dbf29a76fffffffffffffffffffffffffffffffff191681526020018281526020018581526020016000604051806060016040529081600082018054612ab7906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612ae3906147c3565b8015612b305780601f10612b0557610100808354040283529160200191612b30565b820191906000526020600020905b815481529060010190602001808311612b1357829003601f168201915b505050505081526020016001820160009054906101000a900460ff16151515158152602001600282018054612b64906147c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612b90906147c3565b8015612bdd5780601f10612bb257610100808354040283529160200191612bdd565b820191906000526020600020905b815481529060010190602001808311612bc057829003601f168201915b50505050508152505081525091505092915050565b612bfa612d46565b6000600167ffffffffffffffff811115612c1757612c16612eb5565b5b604051908082528060200260200182016040528015612c5057816020015b612c3d612da1565b815260200190600190039081612c355790505b5090508681600081518110612c6857612c67614765565b5b60200260200101819052506000600167ffffffffffffffff811115612c9057612c8f612eb5565b5b604051908082528060200260200182016040528015612cc957816020015b612cb6612def565b815260200190600190039081612cae5790505b5090508681600081518110612ce157612ce0614765565b5b60200260200101819052506040518060a00160405280866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff19168152602001838152602001828152602001878152509250505095945050505050565b6040518060a0016040528060006fffffffffffffffffffffffffffffffff1916815260200160006fffffffffffffffffffffffffffffffff191681526020016060815260200160608152602001612d9b612e68565b81525090565b6040518060c0016040528060006003811115612dc057612dbf613241565b5b815260200160008152602001600015158152602001600015158152602001600015158152602001606081525090565b6040518060e0016040528060006004811115612e0e57612e0d613241565b5b815260200160006fffffffffffffffffffffffffffffffff1916815260200160006fffffffffffffffffffffffffffffffff1916815260200160008152602001600015158152602001600015158152602001606081525090565b604051806060016040528060608152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612eed82612ea4565b810181811067ffffffffffffffff82111715612f0c57612f0b612eb5565b5b80604052505050565b6000612f1f612e8b565b9050612f2b8282612ee4565b919050565b600080fd5b60058110612f4257600080fd5b50565b600081359050612f5481612f35565b92915050565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b612f8f81612f5a565b8114612f9a57600080fd5b50565b600081359050612fac81612f86565b92915050565b6000819050919050565b612fc581612fb2565b8114612fd057600080fd5b50565b600081359050612fe281612fbc565b92915050565b60008115159050919050565b612ffd81612fe8565b811461300857600080fd5b50565b60008135905061301a81612ff4565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561304557613044612eb5565b5b61304e82612ea4565b9050602081019050919050565b82818337600083830152505050565b600061307d6130788461302a565b612f15565b90508281526020810184848401111561309957613098613025565b5b6130a484828561305b565b509392505050565b600082601f8301126130c1576130c0613020565b5b81356130d184826020860161306a565b91505092915050565b600060e082840312156130f0576130ef612e9f565b5b6130fa60e0612f15565b9050600061310a84828501612f45565b600083015250602061311e84828501612f9d565b602083015250604061313284828501612f9d565b604083015250606061314684828501612fd3565b606083015250608061315a8482850161300b565b60808301525060a061316e8482850161300b565b60a08301525060c082013567ffffffffffffffff81111561319257613191612f30565b5b61319e848285016130ac565b60c08301525092915050565b600080604083850312156131c1576131c0612e95565b5b600083013567ffffffffffffffff8111156131df576131de612e9a565b5b6131eb858286016130da565b92505060206131fc85828601612f9d565b9150509250929050565b61320f81612f5a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061328157613280613241565b5b50565b600081905061329282613270565b919050565b60006132a282613284565b9050919050565b6132b281613297565b82525050565b6132c181612fb2565b82525050565b6132d081612fe8565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156133105780820151818401526020810190506132f5565b60008484015250505050565b6000613327826132d6565b61333181856132e1565b93506133418185602086016132f2565b61334a81612ea4565b840191505092915050565b600060c08301600083015161336d60008601826132a9565b50602083015161338060208601826132b8565b50604083015161339360408601826132c7565b5060608301516133a660608601826132c7565b5060808301516133b960808601826132c7565b5060a083015184820360a08601526133d1828261331c565b9150508091505092915050565b60006133ea8383613355565b905092915050565b6000602082019050919050565b600061340a82613215565b6134148185613220565b93508360208202850161342685613231565b8060005b85811015613462578484038952815161344385826133de565b945061344e836133f2565b925060208a0199505060018101905061342a565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600581106134b1576134b0613241565b5b50565b60008190506134c2826134a0565b919050565b60006134d2826134b4565b9050919050565b6134e2816134c7565b82525050565b600060e08301600083015161350060008601826134d9565b5060208301516135136020860182613206565b5060408301516135266040860182613206565b50606083015161353960608601826132b8565b50608083015161354c60808601826132c7565b5060a083015161355f60a08601826132c7565b5060c083015184820360c0860152613577828261331c565b9150508091505092915050565b600061359083836134e8565b905092915050565b6000602082019050919050565b60006135b082613474565b6135ba818561347f565b9350836020820285016135cc85613490565b8060005b8581101561360857848403895281516135e98582613584565b94506135f483613598565b925060208a019950506001810190506135d0565b50829750879550505050505092915050565b60006060830160008301518482036000860152613637828261331c565b915050602083015161364c60208601826132c7565b5060408301518482036040860152613664828261331c565b9150508091505092915050565b600060a0830160008301516136896000860182613206565b50602083015161369c6020860182613206565b50604083015184820360408601526136b482826133ff565b915050606083015184820360608601526136ce82826135a5565b915050608083015184820360808601526136e8828261361a565b9150508091505092915050565b6000602082019050818103600083015261370f8184613671565b905092915050565b6004811061372457600080fd5b50565b60008135905061373681613717565b92915050565b600060c0828403121561375257613751612e9f565b5b61375c60c0612f15565b9050600061376c84828501613727565b600083015250602061378084828501612fd3565b60208301525060406137948482850161300b565b60408301525060606137a88482850161300b565b60608301525060806137bc8482850161300b565b60808301525060a082013567ffffffffffffffff8111156137e0576137df612f30565b5b6137ec848285016130ac565b60a08301525092915050565b60006060828403121561380e5761380d612e9f565b5b6138186060612f15565b9050600082013567ffffffffffffffff81111561383857613837612f30565b5b613844848285016130ac565b60008301525060206138588482850161300b565b602083015250604082013567ffffffffffffffff81111561387c5761387b612f30565b5b613888848285016130ac565b60408301525092915050565b6000806000606084860312156138ad576138ac612e95565b5b600084013567ffffffffffffffff8111156138cb576138ca612e9a565b5b6138d78682870161373c565b935050602084013567ffffffffffffffff8111156138f8576138f7612e9a565b5b613904868287016137f8565b925050604061391586828701612f9d565b9150509250925092565b600067ffffffffffffffff82111561393a57613939612eb5565b5b602082029050602081019050919050565b600080fd5b600061396361395e8461391f565b612f15565b905080838252602082019050602084028301858111156139865761398561394b565b5b835b818110156139cd57803567ffffffffffffffff8111156139ab576139aa613020565b5b8086016139b889826130da565b85526020850194505050602081019050613988565b5050509392505050565b600082601f8301126139ec576139eb613020565b5b81356139fc848260208601613950565b91505092915050565b600080600060608486031215613a1e57613a1d612e95565b5b600084013567ffffffffffffffff811115613a3c57613a3b612e9a565b5b613a48868287016139d7565b935050602084013567ffffffffffffffff811115613a6957613a68612e9a565b5b613a75868287016137f8565b9250506040613a8686828701612f9d565b9150509250925092565b613a9981612f5a565b82525050565b6000602082019050613ab46000830184613a90565b92915050565b600067ffffffffffffffff821115613ad557613ad4612eb5565b5b602082029050602081019050919050565b6000613af9613af484613aba565b612f15565b90508083825260208201905060208402830185811115613b1c57613b1b61394b565b5b835b81811015613b6357803567ffffffffffffffff811115613b4157613b40613020565b5b808601613b4e898261373c565b85526020850194505050602081019050613b1e565b5050509392505050565b600082601f830112613b8257613b81613020565b5b8135613b92848260208601613ae6565b91505092915050565b60008060408385031215613bb257613bb1612e95565b5b600083013567ffffffffffffffff811115613bd057613bcf612e9a565b5b613bdc85828601613b6d565b9250506020613bed85828601612f9d565b9150509250929050565b60008060008060808587031215613c1157613c10612e95565b5b600085013567ffffffffffffffff811115613c2f57613c2e612e9a565b5b613c3b87828801613b6d565b945050602085013567ffffffffffffffff811115613c5c57613c5b612e9a565b5b613c68878288016139d7565b9350506040613c7987828801612f9d565b9250506060613c8a87828801612f9d565b91505092959194509250565b60008060008060808587031215613cb057613caf612e95565b5b600085013567ffffffffffffffff811115613cce57613ccd612e9a565b5b613cda8782880161373c565b945050602085013567ffffffffffffffff811115613cfb57613cfa612e9a565b5b613d07878288016137f8565b9350506040613d1887828801612f9d565b9250506060613d2987828801612f9d565b91505092959194509250565b600080600060608486031215613d4e57613d4d612e95565b5b600084013567ffffffffffffffff811115613d6c57613d6b612e9a565b5b613d788682870161373c565b935050602084013567ffffffffffffffff811115613d9957613d98612e9a565b5b613da5868287016130da565b9250506040613db686828701612f9d565b9150509250925092565b600080600060608486031215613dd957613dd8612e95565b5b600084013567ffffffffffffffff811115613df757613df6612e9a565b5b613e03868287016130da565b935050602084013567ffffffffffffffff811115613e2457613e23612e9a565b5b613e30868287016137f8565b9250506040613e4186828701612f9d565b9150509250925092565b60008060008060808587031215613e6557613e64612e95565b5b600085013567ffffffffffffffff811115613e8357613e82612e9a565b5b613e8f878288016139d7565b945050602085013567ffffffffffffffff811115613eb057613eaf612e9a565b5b613ebc878288016137f8565b9350506040613ecd87828801612f9d565b9250506060613ede87828801612f9d565b91505092959194509250565b600080600060608486031215613f0357613f02612e95565b5b600084013567ffffffffffffffff811115613f2157613f20612e9a565b5b613f2d868287016130da565b9350506020613f3e86828701612f9d565b9250506040613f4f86828701612f9d565b9150509250925092565b60008060408385031215613f7057613f6f612e95565b5b600083013567ffffffffffffffff811115613f8e57613f8d612e9a565b5b613f9a8582860161373c565b9250506020613fab85828601612f9d565b9150509250929050565b600080600060608486031215613fce57613fcd612e95565b5b600084013567ffffffffffffffff811115613fec57613feb612e9a565b5b613ff886828701613b6d565b935050602084013567ffffffffffffffff81111561401957614018612e9a565b5b614025868287016139d7565b925050604061403686828701612f9d565b9150509250925092565b60008060006060848603121561405957614058612e95565b5b600084013567ffffffffffffffff81111561407757614076612e9a565b5b61408386828701613b6d565b935050602061409486828701612f9d565b92505060406140a586828701612f9d565b9150509250925092565b600080600080608085870312156140c9576140c8612e95565b5b600085013567ffffffffffffffff8111156140e7576140e6612e9a565b5b6140f387828801613b6d565b945050602085013567ffffffffffffffff81111561411457614113612e9a565b5b614120878288016137f8565b935050604061413187828801612f9d565b925050606061414287828801612f9d565b91505092959194509250565b60008060006060848603121561416757614166612e95565b5b600084013567ffffffffffffffff81111561418557614184612e9a565b5b614191868287016139d7565b93505060206141a286828701612f9d565b92505060406141b386828701612f9d565b9150509250925092565b600080600080608085870312156141d7576141d6612e95565b5b600085013567ffffffffffffffff8111156141f5576141f4612e9a565b5b614201878288016130da565b945050602085013567ffffffffffffffff81111561422257614221612e9a565b5b61422e878288016137f8565b935050604061423f87828801612f9d565b925050606061425087828801612f9d565b91505092959194509250565b6000806000806080858703121561427657614275612e95565b5b600085013567ffffffffffffffff81111561429457614293612e9a565b5b6142a08782880161373c565b945050602085013567ffffffffffffffff8111156142c1576142c0612e9a565b5b6142cd878288016130da565b93505060406142de87828801612f9d565b92505060606142ef87828801612f9d565b91505092959194509250565b60008060006060848603121561431457614313612e95565b5b600084013567ffffffffffffffff81111561433257614331612e9a565b5b61433e8682870161373c565b935050602061434f86828701612f9d565b925050604061436086828701612f9d565b9150509250925092565b60008060006060848603121561438357614382612e95565b5b600084013567ffffffffffffffff8111156143a1576143a0612e9a565b5b6143ad86828701613b6d565b935050602084013567ffffffffffffffff8111156143ce576143cd612e9a565b5b6143da868287016137f8565b92505060406143eb86828701612f9d565b9150509250925092565b600080600080600060a0868803121561441157614410612e95565b5b600086013567ffffffffffffffff81111561442f5761442e612e9a565b5b61443b88828901613b6d565b955050602086013567ffffffffffffffff81111561445c5761445b612e9a565b5b614468888289016139d7565b945050604086013567ffffffffffffffff81111561448957614488612e9a565b5b614495888289016137f8565b93505060606144a688828901612f9d565b92505060806144b788828901612f9d565b9150509295509295909350565b600080600080608085870312156144de576144dd612e95565b5b600085013567ffffffffffffffff8111156144fc576144fb612e9a565b5b61450887828801613b6d565b945050602085013567ffffffffffffffff81111561452957614528612e9a565b5b614535878288016139d7565b935050604085013567ffffffffffffffff81111561455657614555612e9a565b5b614562878288016137f8565b925050606061457387828801612f9d565b91505092959194509250565b6000806000806080858703121561459957614598612e95565b5b600085013567ffffffffffffffff8111156145b7576145b6612e9a565b5b6145c38782880161373c565b945050602085013567ffffffffffffffff8111156145e4576145e3612e9a565b5b6145f0878288016130da565b935050604085013567ffffffffffffffff81111561461157614610612e9a565b5b61461d878288016137f8565b925050606061462e87828801612f9d565b91505092959194509250565b6000806040838503121561465157614650612e95565b5b600083013567ffffffffffffffff81111561466f5761466e612e9a565b5b61467b858286016139d7565b925050602061468c85828601612f9d565b9150509250929050565b600080600080600060a086880312156146b2576146b1612e95565b5b600086013567ffffffffffffffff8111156146d0576146cf612e9a565b5b6146dc8882890161373c565b955050602086013567ffffffffffffffff8111156146fd576146fc612e9a565b5b614709888289016130da565b945050604086013567ffffffffffffffff81111561472a57614729612e9a565b5b614736888289016137f8565b935050606061474788828901612f9d565b925050608061475888828901612f9d565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806147db57607f821691505b6020821081036147ee576147ed614794565b5b5091905056fea264697066735822122030defde0fde3c7c1726eba119c37d9b7804bfe7b71b839a9802a978754b0d05a64736f6c63430008130033";

type RequestBuilderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RequestBuilderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RequestBuilder__factory extends ContractFactory {
  constructor(...args: RequestBuilderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RequestBuilder> {
    return super.deploy(overrides || {}) as Promise<RequestBuilder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RequestBuilder {
    return super.attach(address) as RequestBuilder;
  }
  override connect(signer: Signer): RequestBuilder__factory {
    return super.connect(signer) as RequestBuilder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequestBuilderInterface {
    return new utils.Interface(_abi) as RequestBuilderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequestBuilder {
    return new Contract(address, _abi, signerOrProvider) as RequestBuilder;
  }
}
