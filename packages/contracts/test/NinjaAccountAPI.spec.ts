import { ethers } from "hardhat";
import { expect } from "chai";
import { EntryPoint__factory } from "@account-abstraction/contracts";
import { NinjaAccountAPI } from "../lib/account-abstraction/NinjaAccountAPI";
import deployments from "../deployments.json";

describe("NinjaAccountAPI", () => {
  const { entryPointAddress } = deployments;

  // fixture
  const userId = "0x20fd5ff9c98c4ae40d735e04a785cfcd748008d04e3e8f0a742160e79acc1e4d";
  const salt = "0xcfee7c08a98f4b565d124c7e4e28acc52e1bc780e3887db0a02a7d2d5bc66728";
  const appId = "0x49c751f1595e8b3016096a7df01d2a96";
  // const userOpHash = "0x406e33056b4d0ba10030c9a5bfb59ef8f6653ee61b0cf7f92e5178d22e82e8c7";
  const responseBytes =
    "0x000000000000000000000000000000000000000000000000000000000000002049c751f1595e8b3016096a7df01d2a9600000000000000000000000000000000b8e2054f8a912367e38a22ce773328ff000000000000000000000000000000007369736d6f2d636f6e6e6563742d76310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001a068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000004a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120fd5ff9c98c4ae40d735e04a785cfcd748008d04e3e8f0a742160e79acc1e4d00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c0138cb7f000a5e88e1f6b7332030d3d408cf809267e6b0b7444f70a7fe3384d2f244915639f8aab82f9448ec1532aa0514ccf211ea812d152b938486180d655da0605cd5ad81d87f014171e0a245e70fdec70220d0b352f3259acf588c161a06d1b80c2255ee7d189563aa35ca40c73315a329c9815c04eec949e252e7835ca820bf71eea7655217b52747bf6f9aec47aaa8d24260dfde6b315794a594b85351e26080fd230324a114df7a8f9a561d13862f91e5af18df737b697987c0a1745e414ebcfde6ca6060e5bbe203503b570d2af5255e2cdd333cb8054f7145e6691a204c21919847061e1347fb466ca06b84751d8e89f0d8b539d8a6b18d2397f9f8f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f6c5612eb579788478789deccb06cf0eb168e457eea490af754922939ebdb920706798455f90ed993f8dac8075fc1538738a25f0c928da905c0dffd81869fa00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020fd5ff9c98c4ae40d735e04a785cfcd748008d04e3e8f0a742160e79acc1e4d28df6018afa5e59738975c607d5e93b9e7fc5564edaa1bf7655e8693ea14282c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

  const fixture = async () => {
    const [signer] = await ethers.getSigners();

    const SismoVerifier = await ethers.getContractFactory("SismoVerifier");
    const sismoVerifier = await SismoVerifier.deploy(appId);

    const entryPoint = EntryPoint__factory.connect(entryPointAddress, signer);
    const NinjaAccountFactory = await ethers.getContractFactory("NinjaAccountFactory");
    const ninjaAccountFactory = await NinjaAccountFactory.deploy();

    await ninjaAccountFactory.deployed();
    const ninjaAccountAPI = new NinjaAccountAPI({
      entryPointAddress: entryPointAddress,
      factoryAddress: ninjaAccountFactory.address,
      sismoVerifierAddress: sismoVerifier.address,
      userId,
      salt,
      provider: ethers.provider,
    });
    return { signer, entryPoint, ninjaAccountAPI };
  };

  it("getAccountAddress", async function () {
    const { ninjaAccountAPI } = await fixture();
    expect(await ninjaAccountAPI.getAccountAddress()).not.eq(ethers.constants.AddressZero);
  });

  it("CreateUnsignedUserOperation", async function () {
    const { signer, entryPoint, ninjaAccountAPI } = await fixture();
    const accountAddress = await ninjaAccountAPI.getAccountAddress();
    await signer.sendTransaction({ to: accountAddress, value: ethers.utils.parseEther("0.01") });
    const userOp = await ninjaAccountAPI.createUnsignedUserOp({
      data: "0x",
      target: ethers.constants.AddressZero,
    });
    userOp.signature = responseBytes;
    await entryPoint.handleOps([{ ...userOp, verificationGasLimit: 1500000 }], signer.address);
  });
});
