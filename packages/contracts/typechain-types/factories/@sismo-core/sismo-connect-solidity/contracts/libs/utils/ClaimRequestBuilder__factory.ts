/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ClaimRequestBuilder,
  ClaimRequestBuilderInterface,
} from "../../../../../../@sismo-core/sismo-connect-solidity/contracts/libs/utils/ClaimRequestBuilder";

const _abi = [
  {
    inputs: [],
    name: "DEFAULT_CLAIM_REQUEST_EXTRA_DATA",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CLAIM_REQUEST_GROUP_TIMESTAMP",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CLAIM_REQUEST_IS_OPTIONAL",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CLAIM_REQUEST_IS_SELECTABLE_BY_USER",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CLAIM_REQUEST_TYPE",
    outputs: [
      {
        internalType: "enum ClaimType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_CLAIM_REQUEST_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "enum ClaimType",
        name: "claimType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bool",
        name: "isOptional",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isSelectableByUser",
        type: "bool",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "groupId",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "groupTimestamp",
        type: "bytes16",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "build",
    outputs: [
      {
        components: [
          {
            internalType: "enum ClaimType",
            name: "claimType",
            type: "uint8",
          },
          {
            internalType: "bytes16",
            name: "groupId",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "groupTimestamp",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOptional",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSelectableByUser",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612714806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806384a0e9071161010f578063d4e694f7116100a2578063e3ec2c9911610071578063e3ec2c991461068e578063ec294078146106be578063ee5decf2146106ee578063f744d6541461071e576101e5565b8063d4e694f7146105e0578063d8b6eb2b146105fe578063db9178d61461062e578063e379821c1461065e576101e5565b8063b5a7fef5116100de578063b5a7fef514610532578063bd240b8614610562578063c9062f3114610580578063d035c7ca146105b0576101e5565b806384a0e907146104845780638628695b146104a257806397e65353146104d2578063a820af1a14610502576101e5565b8063409f789a116101875780636b945f38116101565780636b945f38146103d6578063749d6d85146104065780637aadac0d1461042457806380decbce14610454576101e5565b8063409f789a146103285780634d06bd8814610358578063644c52c8146103885780636658580a146103b8576101e5565b806335628e71116101c357806335628e71146102685780633880e361146102985780633a5dc559146102c85780633b0cb073146102f8576101e5565b80630d55ad28146101ea578063102f7b601461021a57806330c62a4a1461024a575b600080fd5b61020460048036038101906101ff9190611921565b61074e565b6040516102119190611b79565b60405180910390f35b610234600480360381019061022f9190611bc7565b6107d2565b6040516102419190611b79565b60405180910390f35b610252610856565b60405161025f9190611c59565b60405180910390f35b610282600480360381019061027d9190611ca0565b61085b565b60405161028f9190611b79565b60405180910390f35b6102b260048036038101906102ad9190611d07565b6108ed565b6040516102bf9190611b79565b60405180910390f35b6102e260048036038101906102dd9190611d82565b61099e565b6040516102ef9190611b79565b60405180910390f35b610312600480360381019061030d9190611de9565b610a4f565b60405161031f9190611b79565b60405180910390f35b610342600480360381019061033d9190611e64565b610ae1565b60405161034f9190611b79565b60405180910390f35b610372600480360381019061036d9190611eb7565b610b92565b60405161037f9190611b79565b60405180910390f35b6103a2600480360381019061039d9190611f0a565b610c24565b6040516103af9190611b79565b60405180910390f35b6103c0610cb6565b6040516103cd9190611f59565b60405180910390f35b6103f060048036038101906103eb9190611f74565b610cbb565b6040516103fd9190611b79565b60405180910390f35b61040e610d4d565b60405161041b9190612010565b60405180910390f35b61043e6004803603810190610439919061202b565b610d71565b60405161044b9190611b79565b60405180910390f35b61046e600480360381019061046991906120c2565b610df5565b60405161047b9190611b79565b60405180910390f35b61048c610ea6565b6040516104999190612111565b60405180910390f35b6104bc60048036038101906104b7919061212c565b610eab565b6040516104c99190611b79565b60405180910390f35b6104ec60048036038101906104e7919061216c565b610f5c565b6040516104f99190611b79565b60405180910390f35b61051c600480360381019061051791906121db565b610fff565b6040516105299190611b79565b60405180910390f35b61054c60048036038101906105479190612237565b6110a2565b6040516105599190611b79565b60405180910390f35b61056a611153565b6040516105779190611c59565b60405180910390f35b61059a6004803603810190610595919061229e565b611158565b6040516105a79190611b79565b60405180910390f35b6105ca60048036038101906105c591906122f1565b6111ea565b6040516105d79190611b79565b60405180910390f35b6105e861127c565b6040516105f591906123a2565b60405180910390f35b610618600480360381019061061391906123c4565b61128f565b6040516106259190611b79565b60405180910390f35b6106486004803603810190610643919061243f565b611321565b6040516106559190611b79565b60405180910390f35b610678600480360381019061067391906124c2565b6113c4565b6040516106859190611b79565b60405180910390f35b6106a860048036038101906106a391906124ef565b611475565b6040516106b59190611b79565b60405180910390f35b6106d860048036038101906106d391906125ad565b6114f9565b6040516106e59190611b79565b60405180910390f35b6107086004803603810190610703919061261c565b61159c565b6040516107159190611b79565b60405180910390f35b6107386004803603810190610733919061266f565b61164d565b6040516107459190611b79565b60405180910390f35b6107566116d1565b6040518060e00160405280846004811115610774576107736119a4565b5b8152602001866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff1916815260200160018152602001600015158152602001600115158152602001838152509050949350505050565b6107da6116d1565b6040518060e00160405280600060048111156107f9576107f86119a4565b5b8152602001866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff19168152602001848152602001600015158152602001600115158152602001838152509050949350505050565b600081565b6108636116d1565b6040518060e0016040528060006004811115610882576108816119a4565b5b8152602001866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff191681526020016001815260200184151581526020018315158152602001604051806020016040528060008152508152509050949350505050565b6108f56116d1565b6040518060e00160405280856004811115610913576109126119a4565b5b8152602001876fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff191681526020018681526020018415158152602001831515815260200160405180602001604052806000815250815250905095945050505050565b6109a66116d1565b6040518060e00160405280600060048111156109c5576109c46119a4565b5b8152602001866fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff1916815260200185815260200184151581526020018315158152602001604051806020016040528060008152508152509050949350505050565b610a576116d1565b6040518060e00160405280856004811115610a7557610a746119a4565b5b8152602001876fffffffffffffffffffffffffffffffff19168152602001866fffffffffffffffffffffffffffffffff19168152602001600181526020018415158152602001831515815260200160405180602001604052806000815250815250905095945050505050565b610ae96116d1565b6040518060e00160405280836004811115610b0757610b066119a4565b5b8152602001856fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff191681526020018481526020016000151581526020016001151581526020016040518060200160405280600081525081525090509392505050565b610b9a6116d1565b6040518060e0016040528060006004811115610bb957610bb86119a4565b5b8152602001856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff191681526020018381526020016000151581526020016001151581526020016040518060200160405280600081525081525090509392505050565b610c2c6116d1565b6040518060e0016040528060006004811115610c4b57610c4a6119a4565b5b8152602001846fffffffffffffffffffffffffffffffff19168152602001836fffffffffffffffffffffffffffffffff191681526020016001815260200160001515815260200160011515815260200160405180602001604052806000815250815250905092915050565b600181565b610cc36116d1565b6040518060e00160405280856004811115610ce157610ce06119a4565b5b8152602001886fffffffffffffffffffffffffffffffff19168152602001876fffffffffffffffffffffffffffffffff19168152602001868152602001841515815260200183151581526020016040518060200160405280600081525081525090509695505050505050565b7f6c6174657374000000000000000000000000000000000000000000000000000081565b610d796116d1565b6040518060e00160405280846004811115610d9757610d966119a4565b5b8152602001876fffffffffffffffffffffffffffffffff19168152602001866fffffffffffffffffffffffffffffffff1916815260200185815260200160001515815260200160011515815260200183815250905095945050505050565b610dfd6116d1565b6040518060e00160405280836004811115610e1b57610e1a6119a4565b5b8152602001846fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff191681526020016001815260200160001515815260200160011515815260200160405180602001604052806000815250815250905092915050565b600081565b610eb36116d1565b6040518060e0016040528060006004811115610ed257610ed16119a4565b5b8152602001846fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff1916815260200183815260200160001515815260200160011515815260200160405180602001604052806000815250815250905092915050565b610f646116d1565b6040518060e00160405280846004811115610f8257610f816119a4565b5b8152602001856fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff19168152602001600181526020016000151581526020016001151581526020018381525090509392505050565b6110076116d1565b6040518060e0016040528060006004811115611026576110256119a4565b5b8152602001846fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff191681526020016001815260200160001515815260200160011515815260200183815250905092915050565b6110aa6116d1565b6040518060e001604052808560048111156110c8576110c76119a4565b5b8152602001866fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff191681526020016001815260200184151581526020018315158152602001604051806020016040528060008152508152509050949350505050565b600181565b6111606116d1565b6040518060e0016040528083600481111561117e5761117d6119a4565b5b8152602001856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff19168152602001600181526020016000151581526020016001151581526020016040518060200160405280600081525081525090509392505050565b6111f26116d1565b6040518060e001604052808360048111156112105761120f6119a4565b5b8152602001866fffffffffffffffffffffffffffffffff19168152602001856fffffffffffffffffffffffffffffffff19168152602001848152602001600015158152602001600115158152602001604051806020016040528060008152508152509050949350505050565b6040518060200160405280600081525081565b6112976116d1565b6040518060e00160405280600060048111156112b6576112b56119a4565b5b8152602001876fffffffffffffffffffffffffffffffff19168152602001866fffffffffffffffffffffffffffffffff191681526020018581526020018415158152602001831515815260200160405180602001604052806000815250815250905095945050505050565b6113296116d1565b6040518060e00160405280846004811115611347576113466119a4565b5b8152602001866fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff19168152602001858152602001600015158152602001600115158152602001838152509050949350505050565b6113cc6116d1565b6040518060e00160405280600060048111156113eb576113ea6119a4565b5b8152602001836fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff1916815260200160018152602001600015158152602001600115158152602001604051806020016040528060008152508152509050919050565b61147d6116d1565b6040518060e0016040528086600481111561149b5761149a6119a4565b5b8152602001896fffffffffffffffffffffffffffffffff19168152602001886fffffffffffffffffffffffffffffffff1916815260200187815260200185151581526020018415158152602001838152509050979650505050505050565b6115016116d1565b6040518060e00160405280600060048111156115205761151f6119a4565b5b8152602001856fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff191681526020018481526020016000151581526020016001151581526020018381525090509392505050565b6115a46116d1565b6040518060e00160405280600060048111156115c3576115c26119a4565b5b8152602001856fffffffffffffffffffffffffffffffff191681526020017f6c617465737400000000000000000000000000000000000000000000000000006fffffffffffffffffffffffffffffffff1916815260200160018152602001841515815260200183151581526020016040518060200160405280600081525081525090509392505050565b6116556116d1565b6040518060e0016040528060006004811115611674576116736119a4565b5b8152602001856fffffffffffffffffffffffffffffffff19168152602001846fffffffffffffffffffffffffffffffff19168152602001600181526020016000151581526020016001151581526020018381525090509392505050565b6040518060e00160405280600060048111156116f0576116ef6119a4565b5b815260200160006fffffffffffffffffffffffffffffffff1916815260200160006fffffffffffffffffffffffffffffffff1916815260200160008152602001600015158152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b6117938161175e565b811461179e57600080fd5b50565b6000813590506117b08161178a565b92915050565b600581106117c357600080fd5b50565b6000813590506117d5816117b6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61182e826117e5565b810181811067ffffffffffffffff8211171561184d5761184c6117f6565b5b80604052505050565b600061186061174a565b905061186c8282611825565b919050565b600067ffffffffffffffff82111561188c5761188b6117f6565b5b611895826117e5565b9050602081019050919050565b82818337600083830152505050565b60006118c46118bf84611871565b611856565b9050828152602081018484840111156118e0576118df6117e0565b5b6118eb8482856118a2565b509392505050565b600082601f830112611908576119076117db565b5b81356119188482602086016118b1565b91505092915050565b6000806000806080858703121561193b5761193a611754565b5b6000611949878288016117a1565b945050602061195a878288016117a1565b935050604061196b878288016117c6565b925050606085013567ffffffffffffffff81111561198c5761198b611759565b5b611998878288016118f3565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106119e4576119e36119a4565b5b50565b60008190506119f5826119d3565b919050565b6000611a05826119e7565b9050919050565b611a15816119fa565b82525050565b611a248161175e565b82525050565b6000819050919050565b611a3d81611a2a565b82525050565b60008115159050919050565b611a5881611a43565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a98578082015181840152602081019050611a7d565b60008484015250505050565b6000611aaf82611a5e565b611ab98185611a69565b9350611ac9818560208601611a7a565b611ad2816117e5565b840191505092915050565b600060e083016000830151611af56000860182611a0c565b506020830151611b086020860182611a1b565b506040830151611b1b6040860182611a1b565b506060830151611b2e6060860182611a34565b506080830151611b416080860182611a4f565b5060a0830151611b5460a0860182611a4f565b5060c083015184820360c0860152611b6c8282611aa4565b9150508091505092915050565b60006020820190508181036000830152611b938184611add565b905092915050565b611ba481611a2a565b8114611baf57600080fd5b50565b600081359050611bc181611b9b565b92915050565b60008060008060808587031215611be157611be0611754565b5b6000611bef878288016117a1565b9450506020611c00878288016117a1565b9350506040611c1187828801611bb2565b925050606085013567ffffffffffffffff811115611c3257611c31611759565b5b611c3e878288016118f3565b91505092959194509250565b611c5381611a43565b82525050565b6000602082019050611c6e6000830184611c4a565b92915050565b611c7d81611a43565b8114611c8857600080fd5b50565b600081359050611c9a81611c74565b92915050565b60008060008060808587031215611cba57611cb9611754565b5b6000611cc8878288016117a1565b9450506020611cd9878288016117a1565b9350506040611cea87828801611c8b565b9250506060611cfb87828801611c8b565b91505092959194509250565b600080600080600060a08688031215611d2357611d22611754565b5b6000611d31888289016117a1565b9550506020611d4288828901611bb2565b9450506040611d53888289016117c6565b9350506060611d6488828901611c8b565b9250506080611d7588828901611c8b565b9150509295509295909350565b60008060008060808587031215611d9c57611d9b611754565b5b6000611daa878288016117a1565b9450506020611dbb87828801611bb2565b9350506040611dcc87828801611c8b565b9250506060611ddd87828801611c8b565b91505092959194509250565b600080600080600060a08688031215611e0557611e04611754565b5b6000611e13888289016117a1565b9550506020611e24888289016117a1565b9450506040611e35888289016117c6565b9350506060611e4688828901611c8b565b9250506080611e5788828901611c8b565b9150509295509295909350565b600080600060608486031215611e7d57611e7c611754565b5b6000611e8b868287016117a1565b9350506020611e9c86828701611bb2565b9250506040611ead868287016117c6565b9150509250925092565b600080600060608486031215611ed057611ecf611754565b5b6000611ede868287016117a1565b9350506020611eef868287016117a1565b9250506040611f0086828701611bb2565b9150509250925092565b60008060408385031215611f2157611f20611754565b5b6000611f2f858286016117a1565b9250506020611f40858286016117a1565b9150509250929050565b611f5381611a2a565b82525050565b6000602082019050611f6e6000830184611f4a565b92915050565b60008060008060008060c08789031215611f9157611f90611754565b5b6000611f9f89828a016117a1565b9650506020611fb089828a016117a1565b9550506040611fc189828a01611bb2565b9450506060611fd289828a016117c6565b9350506080611fe389828a01611c8b565b92505060a0611ff489828a01611c8b565b9150509295509295509295565b61200a8161175e565b82525050565b60006020820190506120256000830184612001565b92915050565b600080600080600060a0868803121561204757612046611754565b5b6000612055888289016117a1565b9550506020612066888289016117a1565b945050604061207788828901611bb2565b9350506060612088888289016117c6565b925050608086013567ffffffffffffffff8111156120a9576120a8611759565b5b6120b5888289016118f3565b9150509295509295909350565b600080604083850312156120d9576120d8611754565b5b60006120e7858286016117a1565b92505060206120f8858286016117c6565b9150509250929050565b61210b816119fa565b82525050565b60006020820190506121266000830184612102565b92915050565b6000806040838503121561214357612142611754565b5b6000612151858286016117a1565b925050602061216285828601611bb2565b9150509250929050565b60008060006060848603121561218557612184611754565b5b6000612193868287016117a1565b93505060206121a4868287016117c6565b925050604084013567ffffffffffffffff8111156121c5576121c4611759565b5b6121d1868287016118f3565b9150509250925092565b600080604083850312156121f2576121f1611754565b5b6000612200858286016117a1565b925050602083013567ffffffffffffffff81111561222157612220611759565b5b61222d858286016118f3565b9150509250929050565b6000806000806080858703121561225157612250611754565b5b600061225f878288016117a1565b9450506020612270878288016117c6565b935050604061228187828801611c8b565b925050606061229287828801611c8b565b91505092959194509250565b6000806000606084860312156122b7576122b6611754565b5b60006122c5868287016117a1565b93505060206122d6868287016117a1565b92505060406122e7868287016117c6565b9150509250925092565b6000806000806080858703121561230b5761230a611754565b5b6000612319878288016117a1565b945050602061232a878288016117a1565b935050604061233b87828801611bb2565b925050606061234c878288016117c6565b91505092959194509250565b600082825260208201905092915050565b600061237482611a5e565b61237e8185612358565b935061238e818560208601611a7a565b612397816117e5565b840191505092915050565b600060208201905081810360008301526123bc8184612369565b905092915050565b600080600080600060a086880312156123e0576123df611754565b5b60006123ee888289016117a1565b95505060206123ff888289016117a1565b945050604061241088828901611bb2565b935050606061242188828901611c8b565b925050608061243288828901611c8b565b9150509295509295909350565b6000806000806080858703121561245957612458611754565b5b6000612467878288016117a1565b945050602061247887828801611bb2565b9350506040612489878288016117c6565b925050606085013567ffffffffffffffff8111156124aa576124a9611759565b5b6124b6878288016118f3565b91505092959194509250565b6000602082840312156124d8576124d7611754565b5b60006124e6848285016117a1565b91505092915050565b600080600080600080600060e0888a03121561250e5761250d611754565b5b600061251c8a828b016117a1565b975050602061252d8a828b016117a1565b965050604061253e8a828b01611bb2565b955050606061254f8a828b016117c6565b94505060806125608a828b01611c8b565b93505060a06125718a828b01611c8b565b92505060c088013567ffffffffffffffff81111561259257612591611759565b5b61259e8a828b016118f3565b91505092959891949750929550565b6000806000606084860312156125c6576125c5611754565b5b60006125d4868287016117a1565b93505060206125e586828701611bb2565b925050604084013567ffffffffffffffff81111561260657612605611759565b5b612612868287016118f3565b9150509250925092565b60008060006060848603121561263557612634611754565b5b6000612643868287016117a1565b935050602061265486828701611c8b565b925050604061266586828701611c8b565b9150509250925092565b60008060006060848603121561268857612687611754565b5b6000612696868287016117a1565b93505060206126a7868287016117a1565b925050604084013567ffffffffffffffff8111156126c8576126c7611759565b5b6126d4868287016118f3565b915050925092509256fea2646970667358221220e6bf1a54f1003e983460607cb47d55c5d2b77edbdd1fda7c62847d46549fb51664736f6c63430008130033";

type ClaimRequestBuilderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimRequestBuilderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimRequestBuilder__factory extends ContractFactory {
  constructor(...args: ClaimRequestBuilderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClaimRequestBuilder> {
    return super.deploy(overrides || {}) as Promise<ClaimRequestBuilder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ClaimRequestBuilder {
    return super.attach(address) as ClaimRequestBuilder;
  }
  override connect(signer: Signer): ClaimRequestBuilder__factory {
    return super.connect(signer) as ClaimRequestBuilder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimRequestBuilderInterface {
    return new utils.Interface(_abi) as ClaimRequestBuilderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimRequestBuilder {
    return new Contract(address, _abi, signerOrProvider) as ClaimRequestBuilder;
  }
}
